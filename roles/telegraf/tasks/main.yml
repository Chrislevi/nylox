# Author: Salo Shp <saloshp@gmail.com>
#
#    This file is part of Nylox. <https://github.com/nylox/nylox.git>
#
#    Nylox is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Nylox is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Nylox.  If not, see <http://www.gnu.org/licenses/>.
#

---
- name: "Add user '{{ conf.username }}'"
  user:
    name:  "{{ conf.username }}"
    state: present
  tags:
  - conf

- name: "Extract archive"
  unarchive:
    src:  "{{ telegraf_archive_binary }}"
    dest: /opt
    mode: "u=rwx,g=rx,o=rx"
  run_once: true
  delegate_to: localhost
  tags:
  - bin

- name: "Deploy service file"
  template:
    src:   "/opt/telegraf/usr/lib/telegraf/scripts/telegraf.service"
    dest:  /etc/systemd/system/telegraf.service
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  tags:
  - service

- name: "Deploy binary file"
  copy:
    src: "/opt/telegraf/usr/bin/telegraf"
    dest: "/usr/bin/telegraf"
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"

- name: "Stop service"
  service:
    name:    "{{ item }}"
    state:   stopped
    enabled: no
  with_items:
  - "{{ conf.services }}"
  tags:
  - service

- name: "Delete configuration directories"
  file:
    dest:  "{{ item }}"
    state: absent
  with_items:
  - "{{ conf.conf_dir }}"
  - /var/log/telegraf
  tags:
  - clear

- name: "Create configuration directories"
  file:
    path:  "{{ item }}"
    state: directory
    owner: "{{ conf.username }}"
    group: "{{ conf.groupname }}"
  with_items:
  - "{{ conf.conf_dir }}"
  - "{{ conf.root_dir }}"
  - /var/log/telegraf
  tags:
  - conf

- name: "Deploy configuration"
  template:
    src:   "{{ conf.conf_file }}.j2"
    dest:  "{{ conf.conf_dir }}/{{ conf.conf_file }}"
    owner: "{{ conf.username }}"
    group: "{{ conf.groupname }}"
    mode:  "u=rw,g=r,o=r"
    force: yes
  tags:
  - conf

- name: "Verify configuration"
  shell:
     "{{ item }}"
  with_items:
  - "{{ conf.conf_dir }}"
  - "{{ conf.root_dir }}"
  when: false
  tags:
  - verify

- name: "Final state for service - {{ service_final.state }}"
  service:
    name:    "{{ item }}"
    state:   "{{ service_final.state }}"
    enabled: "{{ service_final.enabled }}"
  with_items:
  - "{{ conf.services }}"
  tags:
  - service

- name: "Wait for service to start"
  wait_for:
    path: "{{ socket_path }}"
    state: present
    delay: 10
  when:
  - false
  - "service_final.state != 'stopped'"
  tags:
  - service
  - verify

- shell:
    "curl -XPUT 'http://{{ groups['elasticsearch-nodes'][0] }}:9200/_template/telegraf' -d @{{ role_path }}/files/template.json -H 'Content-Type: application/json'"
  register: update_template
  delegate_to: "localhost"
  run_once: true

- debug: var=update_template
  delegate_to: localhost
  run_once: true

